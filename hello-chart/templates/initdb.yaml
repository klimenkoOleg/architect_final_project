apiVersion: batch/v1
kind: Job
metadata:
  name: db-init-job2
spec:
  template:
    metadata:
      name: dbInitJob2
    spec:
      restartPolicy: Never
      containers:
        - name: "post-install-job"
          image: postgres:11.7
          env:
            - name: POSTGRES_PASSWORD
              value: "passwd"
          command:
            - sh
            - "-c"
            - |
              until pg_isready -h myapp-postgresql -p 5432 -d myapp -U myuser;  do echo waiting for database; sleep 2; done && {{ printf "psql postgres://%s:%s@%s/%s" .Values.externalPostgresql.postgresqlUsername .Values.externalPostgresql.postgresqlPassword (include "postgresql.fullname" .) .Values.externalPostgresql.postgresqlDatabase }} <<'EOF'
                -- DROP SCHEMA payment;
              SELECT pg_catalog.set_config('search_path', 'public', false);
              grant usage on schema public to public;
              grant create on schema public to public;
              GRANT ALL PRIVILEGES ON DATABASE "myapp" to myuser;


                CREATE SCHEMA payment AUTHORIZATION myuser;
                CREATE SCHEMA payment2 AUTHORIZATION myuser;
                CREATE SCHEMA auth1 AUTHORIZATION myuser;

                grant usage on schema payment to myuser;
                grant create on schema payment to myuser;
                grant usage on schema payment2 to myuser;
                grant create on schema payment2 to myuser;
                grant usage on schema auth1 to myuser;
                grant create on schema auth1 to myuser;

              GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA payment TO myuser;
              GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA payment2 TO myuser;
              GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA auth1 TO myuser;


                CREATE SEQUENCE user_seq minvalue 1;

                CREATE TABLE system_user
                (
                    id          bigint       NOT NULL,
                    username    varchar(255) NOT NULL,
                    first_name  varchar(255) NULL,
                    last_name   varchar(255) NOT NULL,
                    email       varchar(255) NOT NULL,
                    phone       varchar(50)  NULL,
                    create_date timestamp    NOT NULL,
                    update_date timestamp    NOT NULL,
                    CONSTRAINT user_id_pk PRIMARY KEY (id)
                );

              EOF
  backoffLimit: 0
